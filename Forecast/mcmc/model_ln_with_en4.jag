#=======================================================================
# JAGS model
#
#   NOTES:
#        - ar is gamma, the autoregressive process (tau_ar: precision)
#        - dow is day of the week matrix time rows and Mon-Sat cols
#        - en_lags holds vector of en shifted by different amounts
#        - lag_basis holds spline matrix for reducing dimension of lags
#        - sin holds fixed effect coefficients for spline
#=======================================================================
model {
  #-------------------------------------------------------------------
  # time t = 1
  #-------------------------------------------------------------------
  lambda[1] ~ dbern(pi)
  omega[1] ~ dnorm(0, tau_omega)
  Y_pred[1] <- Y[1]
  ar[1] ~ dnorm(0, tau_ar)
  for(i in 1:6){
    ar_en[i] ~ dnorm(0, tau_ar_en)
  }

  #-------------------------------------------------------------------
  # time t = 2:T + forecast days
  #-------------------------------------------------------------------
  for(t in 2:(N_data+N_ahead)) {
    Y[t] ~ dnorm(mu[t], tau_ln) # tau_ln is the precision, so 1/tau_ln is the variance
    EN[t] ~ dnorm(mu_en[t], tau_ln_en)
    Y_pred[t] ~ dnorm(mu[t], tau_ln)
    mu[t] <- 
      ar[t] +
      Omega[t] + 
      inprod(dw, dow[t,]) +
      nu[1]*ar_en[t+5] + nu[2]*ar_en[t-1+5] + nu[3]*ar_en[t-2+5] + nu[4]*ar_en[t-3+5] + 
      nu[5]*ar_en[t-4+5] + nu[6]*ar_en[t-5+5] + nu[7]*ar_en[t-6+5]
    mu_en[t] <- 
      ar_en[t+5] +
      inprod(dw_en, dow[t,])
    ar[t] ~ dnorm(phi[t] * ar[t-1], tau_ar)
    ar_en[t+5] ~ dnorm(phi[t] * ar_en[t-1+5], tau_ar_en)
    phi[t] <- inprod(beta, beta_basis[t,])
    Omega[t] <- lambda[t] * omega[t]
    lambda[t] ~ dbern(pi)
    omega[t] ~ dnorm(0, tau_omega)
  }
  #-------------------------------------------------------------------
  # priors
  #-------------------------------------------------------------------
  tau_ln ~ dgamma(0.001, 0.001)
  sd_ln <- pow(tau_ln, -1/2)
  tau_ln_en ~ dgamma(0.001, 0.001)
  sd_ln_en <- pow(tau_ln_en, -1/2)
  beta ~ dmnorm(mu_beta, tau_beta)
  for(i in 1:N_lag_basis){
    sin[i] ~ dnorm(0, 10)
  }
  for(i in 1:6){
    dw[i] ~ dnorm(0, 10)
    dw_en[i] ~ dnorm(0, 10)
  }
  for(i in 1:7){
    nu[i] ~ dnorm(0, 10)
  }
  tau_ar ~ dgamma(0.001, 0.001)
  sd_ar <- pow(tau_ar, -1/2)
  tau_ar_en ~ dgamma(0.001, 0.001)
  sd_ar_en <- pow(tau_ar_en, -1/2)
  tau_omega ~ dgamma(0.001, 0.001)
  sd_omega <- pow(tau_omega, -1/2)
  pi ~ dunif(0, 1)
}
